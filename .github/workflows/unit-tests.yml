name: Unit Tests

on:
  pull_request:
  push:
    branches:
      - main
      - release-*
    tags-ignore: [ v.* ]
  schedule:
    - cron: '0 2 * * *'  # every day 2am

jobs:
  test:
    name: Test
    if: github.repository == 'apache/pekko-persistence-cassandra'
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        include:
          - { javaVersion: '8',  container: "cassandra-latest",  scalaVersion: "++2.13.11", test: "test" }
          - { javaVersion: '8',  container: "cassandra-latest",  scalaVersion: "++3.3.0", test: "test" }
          - { javaVersion: '11', container: "cassandra-latest",  scalaVersion: "++2.12.18", test: "test" }
          - { javaVersion: '11', container: "cassandra-latest",  scalaVersion: "++2.13.11", test: "test" }
          - { javaVersion: '8',  container: "cassandra-latest",  scalaVersion: "++3.3.0", test: "test" }
          - { javaVersion: '11', container: "cassandra2",        scalaVersion: "++2.13.11", test: "'testOnly -- -l RequiresCassandraThree'"}
          - { javaVersion: '11', container: "cassandra3",        scalaVersion: "++2.13.11", test: "test" }

    env:
      JAVA_OPTS: -Xms2G -Xmx2G -Xss2M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Checkout GitHub merge
        if: github.event.pull_request
        run: |-
          git fetch origin pull/${{ github.event.pull_request.number }}/merge:scratch
          git checkout scratch

      - name: Setup Java ${{ matrix.javaVersion }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.javaVersion }}

      - name: Cache Coursier cache
        uses: coursier/cache-action@v6.4.3

      - name: Test against ${{ matrix.container }}
        run: |-
          docker compose up -d ${{ matrix.container }} && sbt ${{ matrix.scalaVersion }} ${{matrix.test}}

  mima:
    name: MiMa check
    if: github.repository == 'apache/pekko-persistence-cassandra'
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Checkout GitHub merge
        if: github.event.pull_request
        run: |-
          git fetch origin pull/${{ github.event.pull_request.number }}/merge:scratch
          git checkout scratch

      - name: Setup Java 8
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8

      - name: Cache Coursier cache
        uses: coursier/cache-action@v6.4.3

      - name: MiMa Check
        run: sbt +mimaReportBinaryIssues

  docs:
    name: ScalaDoc, Documentation with Paradox
    if: github.repository == 'apache/pekko-persistence-cassandra'
    runs-on: ubuntu-22.04
    env:
      JAVA_OPTS: -Xms2G -Xmx2G -Xss2M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Checkout GitHub merge
        if: github.event.pull_request
        run: |-
          git fetch origin pull/${{ github.event.pull_request.number }}/merge:scratch
          git checkout scratch

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Cache Coursier cache
        uses: coursier/cache-action@v6.4.3

      - name: Create all API docs for artifacts/website and all reference docs
        run: sbt "unidoc; docs/paradox"
